/**
 	Key Switch NL2 LightSwitch
	Author: David Wolfe (Red-Thirten)
	Date: 06/08/2024
	Extends LightSwitch to handle placard and switch properties of the Key Switch model.
	Licensed under GNU GPLv3 - See LICENSE for more details.
*/

import com.nolimitscoaster.ResourcePath;

import obj.OperatorSwitch;
import util.SceneObjectTools;

public class KeySwitch extends LightSwitch{
	private static final String PLACARD_ELEMENT_NAME = "placard";	// Name of the placard element in the SCO/model
	private static final String KEY_ELEMENT_NAME = "key";			// Name of the key element in the SCO/model
	private static final float KEY_TRAVEL_DIST = 0.04f;				// Distance the key travels out of the switch, in meters
	
	public final bool onLateInit(){		
		super.SCRIPT_NAME = "KeySwitch";	// Script name for debugging
		super.ON_ANGLE = 45.f;				// Angle from the model's original switch position to appear on
		super.OFF_ANGLE = -45.f;			// Angle from the model's original switch position to appear off
		super.COOLDOWN = 2.f;				// Cooldown (in seconds) before the switch can be switched again
		super.SWITCH_TRAVEL_TIME = 0.6f;	// Time (in seconds) for the switch to travel ("speed")
		super.AXIS = 2;						// Axis values: 0 = x, 1 = y, 2 = z
		
		if ( super.onLateInit() ){
			// Get sound Resource Paths
			ResourcePath[] soundPaths = new ResourcePath[]{
				this.getResourcePathForId("sound_on"),
				this.getResourcePathForId("sound_off"),
				this.getResourcePathForId("key_in"),
				this.getResourcePathForId("key_out")
			};
			// Setup key switch
			switches[0] = new OperatorSwitch(
				SceneObjectTools.getElementForName(sco, SWITCH_ELEMENT_PREFIX + "1", SCRIPT_NAME),
				soundPaths,
				2,
				OFF_ANGLE,
				ON_ANGLE,
				AXIS,
				SWITCH_TRAVEL_TIME,
				SceneObjectTools.getElementForName(sco, KEY_ELEMENT_NAME, SCRIPT_NAME),
				KEY_TRAVEL_DIST,
				-1
			);
			// Set initial state
			switches[0].setSwitchState(
				sco.getBooleanParameter("initial_state" + 1).boolValue() ? 1 : 0
			);

			// Adjust delay time to account for key animation
			switchLights[0].setDelayTime(SWITCH_TRAVEL_TIME * 1.5f);

			// Hide placard if configured
			if ( sco.getBooleanParameter("hide_placard").boolValue() ){
				SceneObjectTools.getElementForName(sco, PLACARD_ELEMENT_NAME, SCRIPT_NAME).setVisible(false);
			}
			
			return (switches[0] != null);
		}
		else return false;
	}
}